# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('../..'))


# -- Project information -----------------------------------------------------

project = 'Musicaiz'
copyright = '2022, Carlos Hernandez-Olivan'
author = 'Carlos Hernandez-Olivan'

# The version
from importlib.machinery import SourceFileLoader
from pathlib import Path
musicaiz_version = SourceFileLoader(
    "", "../../musicaiz/version.py"
).load_module()

# The short X.Y version.
version = musicaiz_version.__version__
# The full version, including alpha/beta/rc tags.
release = musicaiz_version.__version__


# -- General configuration ---------------------------------------------------

# The suffix of source filenames.
source_suffix = [".rst", ".md"]

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",  # function indexing
    "sphinx.ext.autosummary",  # for older builds
    "sphinx.ext.viewcode",  # source linkage
    "sphinx.ext.intersphinx",  # cross-linkage
    "sphinx.ext.mathjax",
    "sphinx_gallery.gen_gallery",  # advanced examples
    "numpydoc",  # docstring examples
    "matplotlib.sphinxext.plot_directive",  # docstring examples
    "sphinxcontrib.inkscapeconverter",  # used for badge / logo conversion in tex 
    "sphinx_multiversion",  # historical builds
	"sphinx_design",
	"sphinx_panels",
	"nbsphinx",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

pdf_documents = [('index', u'rst2pdf', u'Sample musicaiz doc', u'Carlos a Olivan'),]

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.

import sphinx_rtd_theme
#import sphinx_book_theme

html_theme = "sphinx_rtd_theme" #'sphinx_book_theme'
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# If false, no module index is generated.
html_domain_indices = True

# If false, no index is generated.
html_use_index = True

html_use_modindex = True

html_logo = '../images/logo_square_dark.png'

html_theme_options = {
    'logo_only': True,
    'style_nav_header_background': '#222222ff',
    #'analytics_id': 'UA-XXXXX-1',
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

html_css_files = [
    'css/custom.css',
]
	
autosummary_generate = True

# --------
# Doctest
# --------

doctest_global_setup = """
import numpy as np
import scipy
np.random.seed(123)
np.set_printoptions(precision=3, linewidth=64, edgeitems=2, threshold=200)
"""

numpydoc_show_class_members = False

# ------------------------------------------------------------------------------
# Plot
# ------------------------------------------------------------------------------
plot_pre_code = (
    doctest_global_setup
    +
"""
    import matplotlib
    matplotlib.rcParams['figure.constrained_layout.use'] = True
"""
)
plot_include_source = True
plot_html_show_source_link = False
plot_formats = [("png", 100), ("pdf", 100)]
plot_html_show_formats = False

font_size = 12  # 13*72/96.0  # 13 px

plot_rcparams = {
    "font.size": font_size,
    "legend.loc": "upper right",
    "legend.frameon": True,
    "legend.framealpha": 0.95,
    "axes.xmargin": 0,
    "axes.ymargin": 0,
    "axes.titlesize": font_size,
    "axes.labelsize": font_size,
    "xtick.labelsize": font_size,
    "ytick.labelsize": font_size,
    "legend.fontsize": font_size,
    "figure.subplot.bottom": 0.2,
    "figure.subplot.left": 0.2,
    "figure.subplot.right": 0.9,
    "figure.subplot.top": 0.85,
    "figure.subplot.wspace": 0.4,
    "text.usetex": False,
}


def reset_mpl(gallery_conf, fname):
    global plot_rcparams

    import matplotlib
    import matplotlib.pyplot as plt

    matplotlib.rcParams.update(**plot_rcparams)

    # Only use constrained layout in 0.8 and above
    plt.close('all')

# Gallery
sphinx_gallery_conf = {
    "examples_dirs": "examples/",
    "gallery_dirs": "auto_examples",
    "backreferences_dir": None,
    "reference_url": {
        "sphinx_gallery": None,
        "numpy": "https://numpy.org/doc/stable/",
        "np": "https://numpy.org/doc/stable/",
        "scipy": "https://docs.scipy.org/doc/scipy/reference/",
        "matplotlib": "https://matplotlib.org/",
        "IPython": "https://ipython.readthedocs.io/en/stable/",
    },
    "reset_modules": (reset_mpl,),
    'capture_repr': ('_repr_html_',),
}
	
# Generate plots for example sections
numpydoc_use_plots = True


intersphinx_mapping = {
    "python": ("https://docs.python.org/3", None),
    "numpy": ("https://numpy.org/doc/stable/", None),
    "np": ("https://numpy.org/doc/stable/", None),
    "scipy": ("https://docs.scipy.org/doc/scipy/reference/", None),
    "matplotlib": ("https://matplotlib.org/", None),
    "sklearn": ("https://scikit-learn.org/stable/", None),
    "pyrubberband": ("https://pyrubberband.readthedocs.io/en/stable/", None),
}
